// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply from: "config.gradle"
buildscript {

    // 🏝️
    ext {
        kotlin_version = '1.3.40'
        kotlin_coroutines = '1.3.1'
        booster_version = '0.22.0'
    }

    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath "com.android.tools.build:gradle:3.2.1"

        /**
         * butterknife
         */
//        classpath 'com.jakewharton:butterknife-gradle-plugin:9.0.0-SNAPSHOT'
        //如果 ButterKnife 插件和其他插件发生冲突而报错请试试 v8.4.0 版本的 ButterKnife 插件, 注意 v8.4.0 最高只能支持 com.android.tools.build:gradle:3.0.1
//        classpath 'com.jakewharton:butterknife-gradle-plugin:8.4.0'

        /**
         * kotlin
         */
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-android-extensions:$kotlin_version"

        /**
         * booster https://github.com/didi/booster
         *   System Bug
         *   booster-transform-finalizer-watchdog-daemon - 修复 finalizer 导致的 TimeoutException
         *   booster-transform-media-player - 修复 MediaPlayer 崩溃
         *   booster-transform-res-check - 检查覆盖安装导致的 Resources 和 Assets 未加载的 Bug
         *   booster-transform-toast - 修复 Toast 在 Android 7.1 上的 Bug
         *   booster-transform-activity-thread - 处理系统 Crash
         *
         *   Performance
         * booster-transform-lint - 性能瓶颈检测
         * classpath "com.didiglobal.booster:booster-transform-lint:$booster_version"
         * booster-transform-thread - 多线程优化
         * classpath "com.didiglobal.booster:booster-transform-thread:$booster_version"
         * booster-transform-webview - WebView 预加载
         * classpath "com.didiglobal.booster:booster-transform-webview:$booster_version"
         * booster-transform-shared-preferences - SharedPreferences 优化
         * classpath "com.didiglobal.booster:booster-transform-shared-preferences:$booster_version"
         */
        classpath "com.didiglobal.booster:booster-gradle-plugin:$booster_version"
        // figure out the features you really need, then choose the right module for integration
//        classpath "com.didiglobal.booster:booster-task-all:$booster_version"
//        classpath "com.didiglobal.booster:booster-transform-all:$booster_version"
        classpath "com.didiglobal.booster:booster-transform-finalizer-watchdog-daemon:$booster_version"
        classpath "com.didiglobal.booster:booster-transform-media-player:$booster_version"
        classpath "com.didiglobal.booster:booster-transform-res-check:$booster_version"
        classpath "com.didiglobal.booster:booster-transform-toast:$booster_version"
        classpath "com.didiglobal.booster:booster-transform-activity-thread:$booster_version"

    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url "https://jitpack.io" }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
